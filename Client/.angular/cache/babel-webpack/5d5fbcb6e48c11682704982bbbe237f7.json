{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ShopService = /*#__PURE__*/(() => {\n  class ShopService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = 'https://localhost:5001/api/';\n    }\n\n    getProducts(ShopParams) {\n      let params = new HttpParams();\n\n      if (ShopParams.brandId !== 0) {\n        params = params.append('brandId', ShopParams.brandId.toString());\n      }\n\n      if (ShopParams.typeId !== 0) {\n        params = params.append('typeId', ShopParams.typeId.toString());\n      } // if( ShopParams.sort){\n\n\n      params = params.append('sort', ShopParams.sort); // }\n\n      if (ShopParams.search) {\n        params = params.append('search', ShopParams.search);\n      }\n\n      params = params.append('pageIndex', ShopParams.pageNumber.toString());\n      params = params.append('pageSize', ShopParams.pageSize.toString());\n      return this.http.get(this.baseUrl + 'products', {\n        observe: 'response',\n        params\n      }).pipe(map(response => {\n        return response.body;\n      }));\n    }\n\n    getProduct(id) {\n      return this.http.get(this.baseUrl + 'products/' + id);\n    }\n\n    getBrands() {\n      return this.http.get(this.baseUrl + 'products/brands');\n    }\n\n    getTypes() {\n      return this.http.get(this.baseUrl + 'products/types');\n    }\n\n  }\n\n  ShopService.ɵfac = function ShopService_Factory(t) {\n    return new (t || ShopService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ShopService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ShopService,\n    factory: ShopService.ɵfac,\n    providedIn: 'root'\n  });\n  return ShopService;\n})();","map":null,"metadata":{},"sourceType":"module"}